package com.dangphuoctai.BookStore.utils;

import java.time.format.DateTimeFormatter;
import java.util.regex.Pattern;

import com.dangphuoctai.BookStore.entity.OrderItem;
import com.dangphuoctai.BookStore.enums.OrderStatus;
import com.dangphuoctai.BookStore.enums.PaymentMethod;
import com.dangphuoctai.BookStore.payloads.dto.PromotionDTO;
import com.dangphuoctai.BookStore.payloads.dto.Order.OrderDTO;
import com.dangphuoctai.BookStore.payloads.dto.Order.OrderItemDTO;

import jakarta.mail.internet.AddressException;
import jakarta.mail.internet.InternetAddress;

public class Email {
    private static final String EMAIL_REGEX = "^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$";
    private static final Pattern EMAIL_PATTERN = Pattern.compile(EMAIL_REGEX);

    public static boolean isValidEmail(String email) {
        if (email == null || !EMAIL_PATTERN.matcher(email).matches()) {
            return false;
        }
        try {
            new InternetAddress(email).validate();
            return true;
        } catch (AddressException e) {
            return false;
        }
    }

    public static String getFormOTPVerifyAccountSendEmail(String verifyUrl, String fullName) {

        String htmlContent = "<html><body style='font-family: Arial, sans-serif;'>"
                + "<h2>Xin ch√†o " + fullName + "!</h2>"
                + "<p>Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi <strong>Nh√† s√°ch tr·ª±c tuy·∫øn BookStore!</strong></p>"
                + "<p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω tr·ªü th√†nh th√†nh vi√™n c·ªßa BookStore."
                + "<p>ƒê·ªÉ s·ª≠ d·ª•ng ƒë∆∞·ª£c t√†i kho·∫£n n√†y, b·∫°n c·∫ßn k√≠ch ho·∫°t b·∫±ng c√°ch nh·∫•n v√†o li√™n k·∫øt b√™n d∆∞·ªõi:</p>"
                + "<table role='presentation' border='0' cellpadding='0' cellspacing='0' style='margin: 20px 0;'>"
                + "  <tr>"
                + "    <td align='center'>"
                + "      <a href='" + verifyUrl + "' "
                + "         style='display: inline-block; background-color: #007bff; color: white; padding: 10px 20px; "
                + "         text-decoration: none; font-size: 16px; border-radius: 5px;'>"
                + "         K√≠ch ho·∫°t t√†i kho·∫£n"
                + "      </a>"
                + "    </td>"
                + "  </tr>"
                + "</table>"
                + "<p>Sau khi k√≠ch ho·∫°t th√†nh c√¥ng, b·∫°n c√≥ th·ªÉ thay ƒë·ªïi m·∫≠t kh·∫©u khi ƒëƒÉng nh·∫≠p v√†o website c·ªßa ch√∫ng t√¥i.</p>"
                + "<p>N·∫øu c√≥ th·∫Øc m·∫Øc hay c·∫ßn s·ª± h·ªó tr·ª£, qu√Ω kh√°ch vui l√≤ng li√™n h·ªá:</p>"
                + "<ul>"
                + "  <li>‚òé (028) 3820 1417</li>"
                + "  <li>üì± Hotline: 0933 141 704</li>"
                + "  <li>üìß Email: <a href='mailto:info@bookstore.vn'>info@bookstore.vn</a></li>"
                + "</ul>"
                + "<p>M·ªôt l·∫ßn n·ªØa, ch√∫ng t√¥i c·∫£m ∆°n b·∫°n ƒë√£ ch·ªçn BookStore.</p>"
                + "<p>Tr√¢n tr·ªçng,<br/>ƒê·ªôi ng≈© BookStore</p>"
                + "</body></html>";

        return htmlContent;
    }

    public static String getFormOTPVerifyOrderSendEmail(String otp, String orderId, String fullName) {

        String htmlContent = "<html><body style='font-family: Arial, sans-serif;'>"
                + "<h2>Xin ch√†o " + fullName + "!</h2>"
                + "<p>C·∫£m ∆°n b·∫°n ƒë√£ ƒë·∫∑t h√†ng t·∫°i <strong>Nh√† s√°ch tr·ª±c tuy·∫øn BookStore</strong>.</p>"
                + "<p>ƒê·ªÉ x√°c nh·∫≠n ƒë∆°n h√†ng <strong>#" + orderId + "</strong>, vui l√≤ng s·ª≠ d·ª•ng m√£ OTP sau:</p>"
                + "<div style='font-size: 24px; font-weight: bold; margin: 20px 0; color: #007bff;'>"
                + otp + "</div>"
                + "<p>M√£ OTP n√†y c√≥ hi·ªáu l·ª±c trong v√≤ng 5 ph√∫t.</p>"
                + "<p>N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán y√™u c·∫ßu n√†y, vui l√≤ng b·ªè qua email n√†y.</p>"
                + "<hr/>"
                + "<p>N·∫øu c√≥ th·∫Øc m·∫Øc hay c·∫ßn h·ªó tr·ª£, vui l√≤ng li√™n h·ªá:</p>"
                + "<ul>"
                + "  <li>‚òé (028) 3820 1417</li>"
                + "  <li>üì± Hotline: 0933 141 704</li>"
                + "  <li>üìß Email: <a href='mailto:info@bookstore.vn'>info@bookstore.vn</a></li>"
                + "</ul>"
                + "<p>Tr√¢n tr·ªçng,<br/>ƒê·ªôi ng≈© BookStore</p>"
                + "</body></html>";

        return htmlContent;
    }

    public static String generateOrderEmailContent(OrderDTO order) {
        String statusText;
        String paymentStatus = order.getPayment().getPaymentMethod() + "( ƒë√£ thanh to√°n )";
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy mm:HH");
        String formattedDate = order.getOrderDateTime().format(formatter);
        switch (order.getOrderStatus()) {
            case PAID:
                statusText = "ƒê√£ ƒë·∫∑t h√†ng th√†nh c√¥ng";
                break;
            case SHIPPED:
                statusText = "ƒê∆°n h√†ng ƒëang ƒë∆∞·ª£c v·∫≠n chuy·ªÉn";
                break;
            case COMPLETED:
                statusText = "ƒê∆°n h√†ng ƒë√£ ƒë∆∞·ª£c giao th√†nh c√¥ng";
                break;
            case FAILED:
                statusText = "ƒê∆°n h√†ng giao h√†ng th·∫•t b·∫°i, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£";
                break;
            case CANCELLED:
                statusText = "ƒê∆°n h√†ng c·ªßa b·∫°n ƒë√£ b·ªã h·ªßy";
                break;
            default:
                statusText = "ƒêang x·ª≠ l√Ω";
                break;
        }
        if (PaymentMethod.COD.equals(order.getPayment().getPaymentMethod())) {
            paymentStatus = "COD ( Thanh to√°n khi nh·∫≠n h√†ng )";
        }
        StringBuilder sb = new StringBuilder();

        sb.append("<h2>Xin ch√†o ").append(order.getDeliveryName()).append(",</h2>");
        sb.append("<p>C·∫£m ∆°n b·∫°n ƒë√£ ƒë·∫∑t h√†ng t·∫°i <b>BookStore</b>.</p>");
        sb.append("<p><b>M√£ ƒë∆°n h√†ng:</b> ").append(order.getOrderCode()).append("</p>");
        sb.append("<p><b>Ng√†y ƒë·∫∑t h√†ng:</b> ").append(formattedDate).append("</p>");
        sb.append("<p><b>Tr·∫°ng th√°i:</b> ").append(statusText).append("</p>");
        sb.append("<p>Ph∆∞∆°ng th·ª©c thanh to√°n: ").append(paymentStatus).append("</p>");

        sb.append("<h3>Th√¥ng tin giao h√†ng:</h3>");
        sb.append("<p>Ng∆∞·ªùi nh·∫≠n: ").append(order.getDeliveryName()).append("</p>");
        sb.append("<p>SƒêT: ").append(order.getDeliveryPhone()).append("</p>");
        sb.append("<p>ƒê·ªãa ch·ªâ: ").append(order.getAddress().toString()).append("</p>");

        sb.append("<h3>Chi ti·∫øt ƒë∆°n h√†ng:</h3>");
        sb.append("<table border='1' cellpadding='5' cellspacing='0' style='border-collapse: collapse;'>");
        sb.append("<tr>")
                .append("<th>S·∫£n ph·∫©m</th>")
                .append("<th>S·ªë l∆∞·ª£ng</th>")
                .append("<th>ƒê∆°n gi√° (VND)</th>")
                .append("<th>Gi·∫£m gi√° (%)</th>")
                .append("<th>Th√†nh ti·ªÅn (VND)</th>")
                .append("</tr>");

        for (OrderItemDTO item : order.getOrderItems()) {
            double unitPrice = item.getPrice();
            int quantity = item.getQuantity();
            double discountPercent = item.getDiscount(); // t·ª´ 0 ƒë·∫øn 100
            double thanhTien = unitPrice * quantity * (100 - discountPercent) / 100.0;

            sb.append("<tr>")
                    .append("<td>").append(item.getProduct().getProductName()).append("</td>")
                    .append("<td style='text-align: center;'>").append(quantity).append("</td>")
                    .append("<td style='text-align: right;'>").append(String.format("%,.0f", unitPrice)).append("</td>")
                    .append("<td style='text-align: center;'>").append(String.format("%.0f", discountPercent))
                    .append("%</td>")
                    .append("<td style='text-align: right;'>").append(String.format("%,.0f", thanhTien)).append("</td>")
                    .append("</tr>");
        }
        sb.append("</table>");

        sb.append("<h3>Thanh to√°n:</h3>");
        sb.append("<p>T·∫°m t√≠nh: ").append(String.format("%,.0f", order.getSubTotal())).append(" VND</p>");
        sb.append("<p>Ph√≠ v·∫≠n chuy·ªÉn: ").append(String.format("%,.0f", order.getPriceShip())).append(" VND</p>");

        // M√£ gi·∫£m gi√° (coupon)
        if (order.getCoupon() != null) {
            PromotionDTO coupon = order.getCoupon();
            sb.append("<p>M√£ gi·∫£m gi√°: ").append(coupon.getPromotionCode()).append(" - ");
            if (Boolean.TRUE.equals(coupon.getValueType())) {
                sb.append("Gi·∫£m ").append(coupon.getValue()).append("%");
            } else {
                sb.append("Gi·∫£m ").append(String.format("%,.0f", coupon.getValue())).append(" VND");
            }
            sb.append("</p>");
        }

        // M√£ freeship
        if (order.getFreeship() != null) {
            PromotionDTO freeship = order.getFreeship();
            sb.append("<p>M√£ freeship: ").append(freeship.getPromotionCode()).append(" - ");
            if (Boolean.TRUE.equals(freeship.getValueType())) {
                sb.append("Gi·∫£m ").append(freeship.getValue()).append("% ph√≠ ship");
            } else {
                sb.append("Gi·∫£m ").append(String.format("%,.0f", freeship.getValue())).append(" VND ph√≠ ship");
            }
            sb.append("</p>");
        }
        sb.append("<p><b>T·ªïng c·ªông: ").append(String.format("%,.0f", order.getTotalAmount())).append(" VND</b></p>");

        if (order.getOrderStatus().equals(OrderStatus.PAID)) {
            sb.append("<br/><p>Ch√∫ng t√¥i s·∫Ω x·ª≠ l√Ω ƒë∆°n h√†ng trong th·ªùi gian s·ªõm nh·∫•t.</p>");
        }

        sb.append("<p>Tr√¢n tr·ªçng,<br/>BookStore Team</p>");

        return sb.toString();
    }

}
